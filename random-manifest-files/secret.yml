# imperative way
# k create secret generic app-secret --from-literal=DB_HOST=mysql 
# k reate secret generic app-secret --from-file=app_secret.properties

apiVersion: v1
kind: Secret
metadata:
  name: app-secret
data:
  DB_HOST: bXlzcWw= # echo -n "mysql" | base64
  DB_USER: cm9vdA== # echo -n "root" | base64
  DB_PASSWORD: bXlwd2Q= # echo -n "bXlwd2Q=" | base64 --decode

-------

apiVersion: v1
kind: Pod
metadata:
  name: myapp
  labels:
    app.kubernetes.io/name: myapp
spec:
  containers:
  envFrom:
    - secretRef: 
        name: app-secret
  - name: myapp
    image: <Image>

-------

apiVersion: v1
kind: Pod
metadata:
  name: myapp
  labels:
    app.kubernetes.io/name: myapp
spec:
  containers:
  env: 
    - name: DB_PASSWORD
      valueFrom:
        secretKeyRef: 
          name: app-secret
          key: DB_PASSWORD
  - name: myapp
    image: <Image>

-------

apiVersion: v1
kind: Pod
metadata:
  name: myapp
  labels:
    app.kubernetes.io/name: myapp
spec:
  containers:
  volumes:
    - name: app-secret-volume
      secret:
        secretName: app-secret
  - name: myapp
    image: <Image>

# if we mount secret as volume in pod, each attribute in secret is created as a file with the value of the secret as it's content